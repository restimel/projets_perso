<html>
<head>
<title>Mesure de temps</title>
<style>
	#corps button{
		font-size: 20pt;
		background-color: white;
		color: black;
		text-decoration:none ;
		font-weight: bold;
		cursor: pointer;
	}
</style>
</head>
<body>
<section id="corps">
	<div id="result">Time: 0 ms</div>
	<hr>
	<button id="play" title="(re)start">&gt;</button> - <button id="pause" title="pause">||</button> - <button id="stop" title="stop">&#9632;</button> - <button id="record" title="record this timestamp">&#9679;</button>
	<hr>
	<div id="test"></div>
	<hr>
	<div id="chrono.htm"></div>
</section>

<script type="text/javascript">
var pause=-1; // -1:arret; 0:play; 1:pause
var temps=0; // temps accumulé
var d = new Date();
var config = {
	sens: 1, // 1: increment, -1: decrement
	startTime: 0,
	latence: 15000,
	stopAfterRecord: 3
};
var nextAction = null;

function getTime(partial) {
	return (Date.now() - d) * config.sens + ( partial ? 0 : temps);
}

function change_state(state){
	switch(state){
		case 0: //demarre
			d=new Date();
			if(pause!==1){
				temps = config.startTime;
				document.getElementById('test').innerHTML="";
			}
			pause=0;
			break;
		case 1: //arrete
			if(!pause){
				temps += getTime(true);
			}
			if(temps){
				pause=-1;
				document.getElementById('test').innerHTML+="<br>Stop: "+temps+" ms";
				temps=0;
				document.getElementById('result').innerHTML="Time: "+temps+" ms";
			}
			break;
		case 2:	//pause
			if(!pause){
				temps += getTime(true);
				pause=1;
				document.getElementById('test').innerHTML+="<br>pause: "+temps+" ms";
				document.getElementById('result').innerHTML="Time: "+temps+" ms";
			}
			break;
		case 3:	//record
			if(!pause){
				document.getElementById('test').innerHTML+="<br>record: "+ getTime(false) +" ms";
			}
			break;
		default:
			console.warn('action unknown');
	}
	return;
}


function timer(){
	if(!document.getElementById("chrono.htm")){ //pour vérifier si on est toujours dans cette page
		clearInterval(chronoTimer);
		return;
	}
	if(pause){
		return;
	}
	var d2 = getTime(false);
	var txt=(d2)+" ms";
	if(d2>60000){
		txt+=" [";
		txt+=Math.floor(d2/60000)+"min ";
		txt+=Math.floor((d2%60000)/1000)+"s ";
		txt+="]";
	}
	document.getElementById('result').innerHTML="Time: "+txt;
	return;
}


var chronoTimer = setInterval(timer,100);


//ajout des événements sur les éléments
document.getElementById('play').onclick = function(){change_state(0)};
document.getElementById('pause').onclick = function(){change_state(2)};
document.getElementById('stop').onclick = function(){change_state(1)};
document.getElementById('record').onclick = function(){change_state(3)};

var lastKey = null;
document.body.onkeydown = function(e){
	var key = e.keyCode,
		save;

	if (key === lastKey) {
		return false;
	}
	lastKey = key;

	switch (key) {
		case 13:
			if (pause === 0) {
				change_state(1); // stop
			} else {
				nextAction = 0;
			}
			break;
		case 32:
			if (pause === 0) {
				if (!--config.willStop) {
					change_state(1); // stop
				} else {
					change_state(3); // record
				}
			} else {
				save = config.startTime;
				config.startTime = config.latence * config.sens * -1;
				change_state(0);
				config.startTime = save;
				nextAction = 0;
				config.willStop = config.stopAfterRecord;
			}
			break;
	}
};
document.body.onkeyup = function(e){
	var key = e.keyCode;
	lastKey = null;

	switch (key) {
		case 13:
			if (nextAction) {
				change_state(nextAction);
				nextAction = null;
			}
			break;
		case 32:
			if (nextAction === 0) {
				if (getTime(false) < 0) {
					change_state(1);
					change_state(0);
					nextAction = null;
				}
			}
			break;
	}
};
</script>
</body>
</html>
